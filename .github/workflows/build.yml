name: Build V8

on:
  workflow_dispatch:
    inputs:
      version:
        type: text
        required: true
  release:
    types: [released]

permissions: write-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [android, linux, win, mac]
        type: [static, shared]
        type2: [shipping, debug]
        arch: [arm, arm64, x64, x86]
        exclude:
          - platform: android
            type: shared
          - platform: win
            type: shared
          - platform: linux
            arch: arm
          - platform: linux
            arch: x86
          - platform: win
            arch: arm
          - platform: win
            arch: x86
          - platform: mac
            arch: arm
          - platform: mac
            arch: x86
    name: ${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.type2 }}
    runs-on: ${{ (( matrix.platform == 'mac' || matrix.platform == 'ios') && 'macos-13') || ( matrix.platform == 'win' && 'windows-latest') || (( matrix.platform == 'linux' ||  matrix.platform == 'android') && 'ubuntu-latest') }}
    steps:
    - uses: actions/checkout@v4

    - name: Configure linux runner
      if: runner.os == 'Linux'
      run: |
        sudo sudo apt-get update -y
        sudo sudo apt-get upgrade -y

    - name: Configure git
      run: |
        git config --global user.name "V8 Builder"
        git config --global user.email "v8.builder@localhost"
        git config --global core.autocrlf false
        git config --global core.filemode false

    - name: Clone V8 - Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        cd ~
        Invoke-WebRequest https://storage.googleapis.com/chrome-infra/depot_tools.zip -OutFile depot_tools.zip
        7z x depot_tools.zip -o*
        $env:PATH += ";$HOME/depot_tools"

    - name: Clone V8 - Non-Windows
      if: runner.os != 'Windows'
      shell: bash
      run: |
        cd ~
        git clone -q https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH=$(pwd)/depot_tools:$PATH
      

    - name: Run build script
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        chmod +x ./build.sh
        _args="${{ github.event.inputs.version || github.event.release.tag_name }} $GITHUB_WORKSPACE ${{ matrix.platform }} ${{ matrix.arch }}"
        if [ "${{ matrix.type }}" = "static" ]; then
        _args+=" true"
        else
        _args+=" false"
        fi
        if [ "${{ matrix.type2 }}" = "debug" ]; then
        _args+=" true"
        else
        _args+=" false"
        fi
        if [ "${{ matrix.platform }}" = "ios" ]; then
        _args+=" 17"
        fi
        bash ./build.sh $_args
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./v8.tar.xz
        asset_name: v8_${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.type2 }}.tar.xz
        asset_content_type: application/x-xz
    - name: Upload artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v3
      with:
        name: v8_${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.type }}-${{ matrix.type2 }}.tar.xz
        path: ./v8.tar.xz
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
